'use client';

import React, { useState, useMemo } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import {
  Search,
  Smile,
  Heart,
  Zap,
  Coffee,
  Car,
  Gamepad2,
  Flag,
  Clock,
  Star,
} from 'lucide-react';
import { cn } from '@/lib/utils';
import { Icon } from '@radix-ui/react-select';

interface EmojiPickerProps {
  onEmojiSelect: (emoji: string) => void;
  className?: string;
}

interface EmojiCategory {
  id: string;
  name: string;
  icon: React.ComponentType<any>;
  emojis: string[];
}

const EMOJI_CATEGORIES: EmojiCategory[] = [
  {
    id: 'recent',
    name: 'Recent',
    icon: Clock,
    emojis: [], // Will be populated from localStorage
  },
  {
    id: 'smileys',
    name: 'Smileys & People',
    icon: Smile,
    emojis: [
      '😀',
      '😃',
      '😄',
      '😁',
      '😆',
      '😅',
      '🤣',
      '😂',
      '🙂',
      '🙃',
      '😉',
      '😊',
      '😇',
      '🥰',
      '😍',
      '🤩',
      '😘',
      '😗',
      '😚',
      '😙',
      '😋',
      '😛',
      '😜',
      '🤪',
      '😝',
      '🤑',
      '🤗',
      '🤭',
      '🤫',
      '🤔',
      '🤐',
      '🤨',
      '😐',
      '😑',
      '😶',
      '😏',
      '😒',
      '🙄',
      '😬',
      '🤥',
      '😔',
      '😪',
      '🤤',
      '😴',
      '😷',
      '🤒',
      '🤕',
      '🤢',
      '🤮',
      '🤧',
      '🥵',
      '🥶',
      '🥴',
      '😵',
      '🤯',
      '🤠',
      '🥳',
      '😎',
      '🤓',
      '🧐',
      '😕',
      '😟',
      '🙁',
      '☹️',
      '😮',
      '😯',
      '😲',
      '😳',
      '🥺',
      '😦',
      '😧',
      '😨',
      '😰',
      '😥',
      '😢',
      '😭',
      '😱',
      '😖',
      '😣',
      '😞',
      '😓',
      '😩',
      '😫',
      '🥱',
      '😤',
      '😡',
      '😠',
      '🤬',
      '😈',
      '👿',
      '👹',
      '👺',
      '🤡',
      '💩',
      '👻',
      '💀',
      '☠️',
      '👽',
      '👾',
      '🤖',
      '🎃',
      '😺',
      '😸',
      '😹',
      '😻',
      '😼',
      '😽',
      '🙀',
      '😿',
      '😾',
    ],
  },
  {
    id: 'animals',
    name: 'Animals & Nature',
    icon: Heart,
    emojis: [
      '🐶',
      '🐱',
      '🐭',
      '🐹',
      '🐰',
      '🦊',
      '🐻',
      '🐼',
      '🐨',
      '🐯',
      '🦁',
      '🐮',
      '🐷',
      '🐽',
      '🐸',
      '🐵',
      '🙈',
      '🙉',
      '🙊',
      '🐒',
      '🐔',
      '🐧',
      '🐦',
      '🐤',
      '🐣',
      '🐥',
      '🦆',
      '🦅',
      '🦉',
      '🦇',
      '🐺',
      '🐗',
      '🐴',
      '🦄',
      '🐝',
      '🐛',
      '🦋',
      '🐌',
      '🐞',
      '🐜',
      '🦟',
      '🦗',
      '🕷️',
      '🕸️',
      '🦂',
      '🐢',
      '🐍',
      '🦎',
      '🦖',
      '🦕',
      '🐙',
      '🦑',
      '🦐',
      '🦞',
      '🦀',
      '🐡',
      '🐠',
      '🐟',
      '🐬',
      '🐳',
      '🐋',
      '🦈',
      '🐊',
      '🐅',
      '🐆',
      '🦓',
      '🦍',
      '🦧',
      '🐘',
      '🦛',
      '🦏',
      '🐪',
      '🐫',
      '🦒',
      '🦘',
      '🐃',
      '🐂',
      '🐄',
      '🐎',
      '🐖',
      '🐏',
      '🐑',
      '🦙',
      '🐐',
      '🦌',
      '🐕',
      '🐩',
      '🦮',
      '🐕‍🦺',
      '🐈',
      '🐓',
      '🦃',
      '🦚',
      '🦜',
      '🦢',
      '🦩',
      '🕊️',
      '🐇',
      '🦝',
      '🦨',
    ],
  },
  {
    id: 'food',
    name: 'Food & Drink',
    icon: Coffee,
    emojis: [
      '🍎',
      '🍐',
      '🍊',
      '🍋',
      '🍌',
      '🍉',
      '🍇',
      '🍓',
      '🫐',
      '🍈',
      '🍒',
      '🍑',
      '🥭',
      '🍍',
      '🥥',
      '🥝',
      '🍅',
      '🍆',
      '🥑',
      '🥦',
      '🥬',
      '🥒',
      '🌶️',
      '🫑',
      '🌽',
      '🥕',
      '🫒',
      '🧄',
      '🧅',
      '🥔',
      '🍠',
      '🥐',
      '🥖',
      '🍞',
      '🥨',
      '🥯',
      '🧀',
      '🥚',
      '🍳',
      '🧈',
      '🥞',
      '🧇',
      '🥓',
      '🥩',
      '🍗',
      '🍖',
      '🦴',
      '🌭',
      '🍔',
      '🍟',
      '🍕',
      '🥪',
      '🥙',
      '🧆',
      '🌮',
      '🌯',
      '🫔',
      '🥗',
      '🥘',
      '🫕',
      '🍝',
      '🍜',
      '🍲',
      '🍛',
      '🍣',
      '🍱',
      '🥟',
      '🦪',
      '🍤',
      '🍙',
      '🍚',
      '🍘',
      '🍥',
      '🥠',
      '🥮',
      '🍢',
      '🍡',
      '🍧',
      '🍨',
      '🍦',
      '🥧',
      '🧁',
      '🍰',
      '🎂',
      '🍮',
      '🍭',
      '🍬',
      '🍫',
      '🍿',
      '🍩',
      '🍪',
      '🌰',
      '🥜',
      '🍯',
      '🥛',
      '🍼',
      '☕',
      '🫖',
      '🍵',
      '🧃',
    ],
  },
  {
    id: 'activity',
    name: 'Activity',
    icon: Gamepad2,
    emojis: [
      '⚽',
      '🏀',
      '🏈',
      '⚾',
      '🥎',
      '🎾',
      '🏐',
      '🏉',
      '🥏',
      '🎱',
      '🪀',
      '🏓',
      '🏸',
      '🏒',
      '🏑',
      '🥍',
      '🏏',
      '🪃',
      '🥅',
      '⛳',
      '🪁',
      '🏹',
      '🎣',
      '🤿',
      '🥊',
      '🥋',
      '🎽',
      '🛹',
      '🛷',
      '⛸️',
      '🥌',
      '🎿',
      '⛷️',
      '🏂',
      '🪂',
      '🏋️‍♀️',
      '🏋️',
      '🏋️‍♂️',
      '🤼‍♀️',
      '🤼',
      '🤼‍♂️',
      '🤸‍♀️',
      '🤸',
      '🤸‍♂️',
      '⛹️‍♀️',
      '⛹️',
      '⛹️‍♂️',
      '🤺',
      '🤾‍♀️',
      '🤾',
      '🤾‍♂️',
      '🏌️‍♀️',
      '🏌️',
      '🏌️‍♂️',
      '🏇',
      '🧘‍♀️',
      '🧘',
      '🧘‍♂️',
      '🏄‍♀️',
      '🏄',
      '🏄‍♂️',
      '🏊‍♀️',
      '🏊',
      '🏊‍♂️',
      '🤽‍♀️',
      '🤽',
      '🤽‍♂️',
      '🚣‍♀️',
      '🚣',
      '🚣‍♂️',
      '🧗‍♀️',
      '🧗',
      '🧗‍♂️',
      '🚵‍♀️',
      '🚵',
      '🚵‍♂️',
      '🚴‍♀️',
      '🚴',
      '🚴‍♂️',
      '🏆',
      '🥇',
      '🥈',
      '🥉',
      '🏅',
      '🎖️',
      '🏵️',
      '🎗️',
      '🎫',
      '🎟️',
      '🎪',
      '🤹',
      '🤹‍♂️',
      '🤹‍♀️',
      '🎭',
      '🩰',
      '🎨',
      '🎬',
      '🎤',
      '🎧',
      '🎼',
    ],
  },
  {
    id: 'travel',
    name: 'Travel & Places',
    icon: Car,
    emojis: [
      '🚗',
      '🚕',
      '🚙',
      '🚌',
      '🚎',
      '🏎️',
      '🚓',
      '🚑',
      '🚒',
      '🚐',
      '🛻',
      '🚚',
      '🚛',
      '🚜',
      '🏍️',
      '🛵',
      '🚲',
      '🛴',
      '🛹',
      '🛼',
      '🚁',
      '🛸',
      '✈️',
      '🛩️',
      '🛫',
      '🛬',
      '🪂',
      '💺',
      '🚀',
      '🛰️',
      '🚊',
      '🚝',
      '🚄',
      '🚅',
      '🚈',
      '🚂',
      '🚆',
      '🚇',
      '🚉',
      '🚞',
      '🚋',
      '🚃',
      '🚖',
      '🚘',
      '🚍',
      '🚔',
      '🚨',
      '🚓',
      '🚒',
      '🚑',
      '⛑️',
      '🛣️',
      '🛤️',
      '🛢️',
      '⛽',
      '🚏',
      '🚥',
      '🚦',
      '🛑',
      '🚧',
      '⚓',
      '⛵',
      '🛶',
      '🚤',
      '🛳️',
      '⛴️',
      '🛥️',
      '🚢',
      '✈️',
      '🛩️',
      '🛫',
      '🛬',
      '💺',
      '🚁',
      '🚟',
      '🚠',
      '🚡',
      '🛰️',
      '🚀',
      '🛸',
      '🏠',
      '🏡',
      '🏘️',
      '🏚️',
      '🏗️',
      '🏭',
      '🏢',
      '🏬',
      '🏣',
      '🏤',
      '🏥',
      '🏦',
      '🏨',
      '🏪',
      '🏫',
      '🏩',
      '💒',
      '🏛️',
      '⛪',
      '🕌',
    ],
  },
  {
    id: 'objects',
    name: 'Objects',
    icon: Zap,
    emojis: [
      '⌚',
      '📱',
      '📲',
      '💻',
      '⌨️',
      '🖥️',
      '🖨️',
      '🖱️',
      '🖲️',
      '🕹️',
      '🗜️',
      '💽',
      '💾',
      '💿',
      '📀',
      '📼',
      '📷',
      '📸',
      '📹',
      '🎥',
      '📽️',
      '🎞️',
      '📞',
      '☎️',
      '📟',
      '📠',
      '📺',
      '📻',
      '🎙️',
      '🎚️',
      '🎛️',
      '🧭',
      '⏱️',
      '⏲️',
      '⏰',
      '🕰️',
      '⌛',
      '⏳',
      '📡',
      '🔋',
      '🔌',
      '💡',
      '🔦',
      '🕯️',
      '🪔',
      '🧯',
      '🛢️',
      '💸',
      '💵',
      '💴',
      '💶',
      '💷',
      '💰',
      '💳',
      '💎',
      '⚖️',
      '🧰',
      '🔧',
      '🔨',
      '⚒️',
      '🛠️',
      '⛏️',
      '🔩',
      '⚙️',
      '🧱',
      '⛓️',
      '🧲',
      '🔫',
      '💣',
      '🧨',
      '🪓',
      '🔪',
      '🗡️',
      '⚔️',
      '🛡️',
      '🚬',
      '⚰️',
      '⚱️',
      '🏺',
      '🔮',
      '📿',
      '🧿',
      '💈',
      '⚗️',
      '🔭',
      '🔬',
      '🕳️',
      '🩹',
      '🩺',
      '💊',
      '💉',
      '🧬',
      '🦠',
      '🧫',
      '🧪',
      '🌡️',
      '🧹',
      '🧺',
      '🧻',
      '🚽',
    ],
  },
  {
    id: 'symbols',
    name: 'Symbols',
    icon: Star,
    emojis: [
      '❤️',
      '🧡',
      '💛',
      '💚',
      '💙',
      '💜',
      '🖤',
      '🤍',
      '🤎',
      '💔',
      '❣️',
      '💕',
      '💞',
      '💓',
      '💗',
      '💖',
      '💘',
      '💝',
      '💟',
      '☮️',
      '✝️',
      '☪️',
      '🕉️',
      '☸️',
      '✡️',
      '🔯',
      '🕎',
      '☯️',
      '☦️',
      '🛐',
      '⛎',
      '♈',
      '♉',
      '♊',
      '♋',
      '♌',
      '♍',
      '♎',
      '♏',
      '♐',
      '♑',
      '♒',
      '♓',
      '🆔',
      '⚛️',
      '🉑',
      '☢️',
      '☣️',
      '📴',
      '📳',
      '🈶',
      '🈚',
      '🈸',
      '🈺',
      '🈷️',
      '✴️',
      '🆚',
      '💮',
      '🉐',
      '㊙️',
      '㊗️',
      '🈴',
      '🈵',
      '🈹',
      '🈲',
      '🅰️',
      '🅱️',
      '🆎',
      '🆑',
      '🅾️',
      '🆘',
      '❌',
      '⭕',
      '🛑',
      '⛔',
      '📛',
      '🚫',
      '💯',
      '💢',
      '♨️',
      '🚷',
      '🚯',
      '🚳',
      '🚱',
      '🔞',
      '📵',
      '🚭',
      '❗',
      '❕',
      '❓',
      '❔',
      '‼️',
      '⁉️',
      '🔅',
      '🔆',
      '〽️',
      '⚠️',
      '🚸',
      '🔱',
      '⚜️',
    ],
  },
  {
    id: 'flags',
    name: 'Flags',
    icon: Flag,
    emojis: [
      '🏁',
      '🚩',
      '🎌',
      '🏴',
      '🏳️',
      '🏳️‍🌈',
      '🏳️‍⚧️',
      '🏴‍☠️',
      '🇦🇨',
      '🇦🇩',
      '🇦🇪',
      '🇦🇫',
      '🇦🇬',
      '🇦🇮',
      '🇦🇱',
      '🇦🇲',
      '🇦🇴',
      '🇦🇶',
      '🇦🇷',
      '🇦🇸',
      '🇦🇹',
      '🇦🇺',
      '🇦🇼',
      '🇦🇽',
      '🇦🇿',
      '🇧🇦',
      '🇧🇧',
      '🇧🇩',
      '🇧🇪',
      '🇧🇫',
      '🇧🇬',
      '🇧🇭',
      '🇧🇮',
      '🇧🇯',
      '🇧🇱',
      '🇧🇲',
      '🇧🇳',
      '🇧🇴',
      '🇧🇶',
      '🇧🇷',
      '🇧🇸',
      '🇧🇹',
      '🇧🇻',
      '🇧🇼',
      '🇧🇾',
      '🇧🇿',
      '🇨🇦',
      '🇨🇨',
      '🇨🇩',
      '🇨🇫',
      '🇨🇬',
      '🇨🇭',
      '🇨🇮',
      '🇨🇰',
      '🇨🇱',
      '🇨🇲',
      '🇨🇳',
      '🇨🇴',
      '🇨🇵',
      '🇨🇷',
      '🇨🇺',
      '🇨🇻',
      '🇨🇼',
      '🇨🇽',
      '🇨🇾',
      '🇨🇿',
      '🇩🇪',
      '🇩🇬',
      '🇩🇯',
      '🇩🇰',
      '🇩🇲',
      '🇩🇴',
      '🇩🇿',
      '🇪🇦',
      '🇪🇨',
      '🇪🇪',
      '🇪🇬',
      '🇪🇭',
      '🇪🇷',
      '🇪🇸',
      '🇪🇹',
      '🇪🇺',
      '🇫🇮',
      '🇫🇯',
      '🇫🇰',
      '🇫🇲',
      '🇫🇴',
      '🇫🇷',
      '🇬🇦',
      '🇬🇧',
      '🇬🇩',
      '🇬🇪',
      '🇬🇫',
      '🇬🇬',
      '🇬🇭',
      '🇬🇮',
      '🇬🇱',
      '🇬🇲',
      '🇬🇳',
      '🇬🇵',
      '🇬🇶',
      '🇬🇷',
      '🇬🇸',
      '🇬🇹',
      '🇬🇺',
      '🇬🇼',
      '🇬🇾',
      '🇭🇰',
      '🇭🇲',
      '🇭🇳',
      '🇭🇷',
      '🇭🇹',
      '🇭🇺',
      '🇮🇨',
      '🇮🇩',
      '🇮🇪',
      '🇮🇱',
      '🇮🇲',
      '🇮🇳',
      '🇮🇴',
      '🇮🇶',
      '🇮🇷',
      '🇮🇸',
      '🇮🇹',
      '🇯🇪',
      '🇯🇲',
      '🇯🇴',
      '🇯🇵',
      '🇰🇪',
      '🇰🇬',
      '🇰🇭',
      '🇰🇮',
      '🇰🇲',
      '🇰🇳',
      '🇰🇵',
      '🇰🇷',
      '🇰🇼',
      '🇰🇾',
      '🇰🇿',
      '🇱🇦',
      '🇱🇧',
      '🇱🇨',
      '🇱🇮',
      '🇱🇰',
      '🇱🇷',
      '🇱🇸',
      '🇱🇹',
      '🇱🇺',
      '🇱🇻',
      '🇱🇾',
      '🇲🇦',
      '🇲🇨',
      '🇲🇩',
      '🇲🇪',
      '🇲🇫',
      '🇲🇬',
      '🇲🇭',
      '🇲🇰',
      '🇲🇱',
      '🇲🇲',
      '🇲🇳',
      '🇲🇴',
      '🇲🇵',
      '🇲🇶',
      '🇲🇷',
      '🇲🇸',
      '🇲🇹',
      '🇲🇺',
      '🇲🇻',
      '🇲🇼',
      '🇲🇽',
      '🇲🇾',
      '🇲🇿',
      '🇳🇦',
      '🇳🇨',
      '🇳🇪',
      '🇳🇫',
      '🇳🇬',
      '🇳🇮',
      '🇳🇱',
      '🇳🇴',
      '🇳🇵',
      '🇳🇷',
      '🇳🇺',
      '🇳🇿',
      '🇴🇲',
      '🇵🇦',
      '🇵🇪',
      '🇵🇫',
      '🇵🇬',
      '🇵🇭',
      '🇵🇰',
      '🇵🇱',
      '🇵🇲',
      '🇵🇳',
      '🇵🇷',
      '🇵🇸',
      '🇵🇹',
      '🇵🇼',
      '🇵🇾',
      '🇶🇦',
      '🇷🇪',
      '🇷🇴',
      '🇷🇸',
      '🇷🇺',
      '🇷🇼',
      '🇸🇦',
      '🇸🇧',
      '🇸🇨',
      '🇸🇩',
      '🇸🇪',
      '🇸🇬',
      '🇸🇭',
      '🇸🇮',
      '🇸🇯',
      '🇸🇰',
      '🇸🇱',
      '🇸🇲',
      '🇸🇳',
      '🇸🇴',
      '🇸🇷',
      '🇸🇸',
      '🇸🇹',
      '🇸🇻',
      '🇸🇽',
      '🇸🇾',
      '🇸🇿',
      '🇹🇦',
      '🇹🇨',
      '🇹🇩',
      '🇹🇫',
      '🇹🇬',
      '🇹🇭',
      '🇹🇯',
      '🇹🇰',
      '🇹🇱',
      '🇹🇲',
      '🇹🇳',
      '🇹🇴',
      '🇹🇷',
      '🇹🇹',
      '🇹🇻',
      '🇹🇼',
      '🇹🇿',
      '🇺🇦',
      '🇺🇬',
      '🇺🇲',
      '🇺🇳',
      '🇺🇸',
      '🇺🇾',
      '🇺🇿',
      '🇻🇦',
      '🇻🇨',
      '🇻🇪',
      '🇻🇬',
      '🇻🇮',
      '🇻🇳',
      '🇻🇺',
      '🇼🇫',
      '🇼🇸',
      '🇽🇰',
      '🇾🇪',
      '🇾🇹',
      '🇿🇦',
      '🇿🇲',
      '🇿🇼',
    ],
  },
];

export function EmojiPicker({ onEmojiSelect, className }: EmojiPickerProps) {
  const [searchTerm, setSearchTerm] = useState('');
  const [activeCategory, setActiveCategory] = useState('recent');

  // Get recent emojis from localStorage
  const getRecentEmojis = (): string[] => {
    if (typeof window === 'undefined') return [];
    try {
      const recent = localStorage.getItem('recent-emojis');
      return recent ? JSON.parse(recent) : [];
    } catch {
      return [];
    }
  };

  // Save emoji to recent
  const saveRecentEmoji = (emoji: string) => {
    if (typeof window === 'undefined') return;
    try {
      const recent = getRecentEmojis();
      const updated = [emoji, ...recent.filter(e => e !== emoji)].slice(0, 24);
      localStorage.setItem('recent-emojis', JSON.stringify(updated));
    } catch {
      // Ignore errors
    }
  };

  // Update recent category with actual data
  const categoriesWithRecent = useMemo(() => {
    const recentEmojis = getRecentEmojis();
    return EMOJI_CATEGORIES.map(category =>
      category.id === 'recent'
        ? { ...category, emojis: recentEmojis }
        : category
    );
  }, []);

  // Filter emojis based on search
  const filteredEmojis = useMemo(() => {
    if (!searchTerm) return [];

    const searchLower = searchTerm.toLowerCase();
    const allEmojis = EMOJI_CATEGORIES.flatMap(cat => cat.emojis);

    // Simple emoji search - in a real app you'd have emoji names/keywords
    const emojiKeywords: Record<string, string[]> = {
      '😀': ['smile', 'happy', 'grin'],
      '😂': ['laugh', 'funny', 'joy', 'tears'],
      '❤️': ['love', 'heart', 'red'],
      '👍': ['like', 'thumbs', 'up', 'good'],
      '👎': ['dislike', 'thumbs', 'down', 'bad'],
      '🔥': ['fire', 'hot', 'flame', 'lit'],
      '💯': ['hundred', 'perfect', 'score'],
      '🎉': ['party', 'celebration', 'confetti'],
      '🥳': ['party', 'celebration', 'hat'],
      '😭': ['cry', 'sad', 'tears'],
      '😍': ['love', 'heart', 'eyes'],
      '🤔': ['thinking', 'hmm', 'wonder'],
      '👀': ['eyes', 'looking', 'watching'],
      '🙏': ['pray', 'please', 'thanks'],
      '💪': ['strong', 'muscle', 'power'],
      '✨': ['sparkle', 'magic', 'shine'],
      '🌟': ['star', 'sparkle', 'shine'],
      '⭐': ['star', 'favorite'],
      '🎯': ['target', 'goal', 'aim'],
      '🚀': ['rocket', 'fast', 'launch'],
    };

    return allEmojis.filter(emoji => {
      const keywords = emojiKeywords[emoji] || [];
      return keywords.some(keyword => keyword.includes(searchLower));
    });
  }, [searchTerm]);

  const handleEmojiClick = (emoji: string) => {
    saveRecentEmoji(emoji);
    onEmojiSelect(emoji);
  };

  const currentEmojis = searchTerm
    ? filteredEmojis
    : categoriesWithRecent.find(cat => cat.id === activeCategory)?.emojis || [];

  return (
    <div
      className={cn(
        'h-96 w-80 rounded-lg border bg-white shadow-lg',
        className
      )}
    >
      {/* Search */}
      <div className="border-b p-3">
        <div className="relative">
          <Search className="absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 transform text-gray-400" />
          <Input
            placeholder="Search emojis..."
            value={searchTerm}
            onChange={e => setSearchTerm(e.target.value)}
            className="h-8 pl-9"
          />
        </div>
      </div>

      {/* Category Tabs */}
      {!searchTerm && (
        <Tabs
          value={activeCategory}
          onValueChange={setActiveCategory}
          className="flex h-full flex-col"
        >
          <TabsList className="grid h-auto grid-cols-8 gap-1 bg-gray-50 p-2">
            {categoriesWithRecent.map(category => {
              const Icon = category.icon;
              return (
                <TabsTrigger
                  key={category.id}
                  value={category.id}
                  className="p-2 data-[state=active]:bg-white data-[state=active]:shadow-sm"
                  title={category.name}
                >
                  <Icon className="h-4 w-4" />
                </TabsTrigger>
              );
            })}
          </TabsList>

          {/* Emoji Grid */}
          <div className="flex-1 overflow-hidden">
            {categoriesWithRecent.map(category => (
              <TabsContent
                key={category.id}
                value={category.id}
                className="m-0 h-full p-0"
              >
                <ScrollArea className="h-full">
                  {category.emojis.length === 0 ? (
                    <div className="flex h-32 flex-col items-center justify-center text-gray-500">
                      <Icon className="mb-2 h-8 w-8" />
                      <p className="text-sm">
                        {category.id === 'recent'
                          ? 'No recent emojis'
                          : 'No emojis in this category'}
                      </p>
                    </div>
                  ) : (
                    <div className="grid grid-cols-8 gap-1 p-2">
                      {category.emojis.map((emoji, index) => (
                        <Button
                          key={`${emoji}-${index}`}
                          variant="ghost"
                          className="h-8 w-8 rounded p-0 text-lg hover:bg-gray-100"
                          onClick={() => handleEmojiClick(emoji)}
                          title={emoji}
                        >
                          {emoji}
                        </Button>
                      ))}
                    </div>
                  )}
                </ScrollArea>
              </TabsContent>
            ))}
          </div>
        </Tabs>
      )}

      {/* Search Results */}
      {searchTerm && (
        <ScrollArea className="h-80">
          {filteredEmojis.length === 0 ? (
            <div className="flex h-32 flex-col items-center justify-center text-gray-500">
              <Search className="mb-2 h-8 w-8" />
              <p className="text-sm">No emojis found</p>
              <p className="text-xs text-gray-400">Try different keywords</p>
            </div>
          ) : (
            <div className="grid grid-cols-8 gap-1 p-2">
              {filteredEmojis.map((emoji, index) => (
                <Button
                  key={`${emoji}-${index}`}
                  variant="ghost"
                  className="h-8 w-8 rounded p-0 text-lg hover:bg-gray-100"
                  onClick={() => handleEmojiClick(emoji)}
                  title={emoji}
                >
                  {emoji}
                </Button>
              ))}
            </div>
          )}
        </ScrollArea>
      )}

      {/* Footer with quick emojis */}
      {!searchTerm && (
        <div className="border-t bg-gray-50 p-2">
          <div className="flex justify-center space-x-1">
            {['👍', '👎', '❤️', '😂', '😮', '😢', '😡', '🔥'].map(emoji => (
              <Button
                key={emoji}
                variant="ghost"
                className="h-8 w-8 rounded p-0 text-base hover:bg-gray-200"
                onClick={() => handleEmojiClick(emoji)}
                title={`Quick: ${emoji}`}
              >
                {emoji}
              </Button>
            ))}
          </div>
        </div>
      )}
    </div>
  );
}
